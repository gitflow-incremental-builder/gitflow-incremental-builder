<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vackosar.gitflowincrementalbuilder</groupId>
    <artifactId>gitflow-incremental-builder</artifactId>
    <version>3.9.1-SNAPSHOT</version>
    <name>${project.groupId}:${project.artifactId}</name>
    <description>A maven extension for incremental building of multi-module projects when using Git Flow.</description>
    <url>https://github.com/vackosar/gitflow-incremental-builder</url>

    <issueManagement>
        <url>https://github.com/vackosar/gitflow-incremental-builder/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <scm>
        <url>https://github.com/vackosar/gitflow-incremental-builder</url>
        <connection>scm:git:https://github.com/vackosar/gitflow-incremental-builder.git</connection>
        <developerConnection>scm:git:https://github.com/vackosar/gitflow-incremental-builder.git</developerConnection>
      <tag>HEAD</tag>
  </scm>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Vaclav Kosar</name>
            <url>https://github.com/vackosar</url>
            <id>vackosar</id>
        </developer>
        <developer>
            <name>Falko Modler</name>
            <url>https://github.com/famod</url>
            <id>famod</id>
        </developer>
    </developers>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javaSourceLevel>1.8</javaSourceLevel>

        <!-- Dependency versions -->
        <version.jgit>5.6.0.201912101111-r</version.jgit>
        <version.maven-core>3.3.9</version.maven-core>
        <version.slf4j>1.7.5</version.slf4j>    <!-- must match the version that is provided by maven -->
        <version.logback>1.2.3</version.logback>    <!-- the latest that appears to work properly with slf4j 1.7.5 -->
        <version.javax.inject>1</version.javax.inject>
        <version.junit>4.13</version.junit>
        <version.powermock-reflect>2.0.4</version.powermock-reflect>
        <version.mockito>3.2.4</version.mockito>
        <version.jetty>9.4.26.v20200117</version.jetty>

        <!-- Plugin versions -->
        <version.maven-enforcer-plugin>3.0.0-M3</version.maven-enforcer-plugin>
        <version.maven-clean-plugin>3.1.0</version.maven-clean-plugin>
        <version.jacoco-maven-plugin>0.8.3</version.jacoco-maven-plugin>    <!-- note: try to keep in line with https://www.eclemma.org/changes.html -->
        <version.plexus-component-metadata>2.1.0</version.plexus-component-metadata>
        <version.maven-resources-plugin>3.1.0</version.maven-resources-plugin>
        <version.maven-compiler-plugin>3.8.1</version.maven-compiler-plugin>
        <version.maven-surefire-plugin>3.0.0-M4</version.maven-surefire-plugin>
        <version.maven-source-plugin>3.2.1</version.maven-source-plugin>
        <version.maven-javadoc-plugin>3.1.1</version.maven-javadoc-plugin>
        <version.maven-jar-plugin>3.2.0</version.maven-jar-plugin>
        <version.maven-failsafe-plugin>3.0.0-M4</version.maven-failsafe-plugin>
        <version.maven-site-plugin>3.8.2</version.maven-site-plugin>
        <version.maven-install-plugin>3.0.0-M1</version.maven-install-plugin>
        <version.maven-antrun-plugin>1.8</version.maven-antrun-plugin>
        <version.ant>1.10.7</version.ant>
        <version.maven-deploy-plugin>3.0.0-M1</version.maven-deploy-plugin>
        <version.maven-gpg-plugin>1.6</version.maven-gpg-plugin>
        <version.nexus-staging-maven-plugin>1.6.8</version.nexus-staging-maven-plugin>
        <version.versions-maven-plugin>2.7</version.versions-maven-plugin>
        <version.maven-release-plugin>3.0.0-M1</version.maven-release-plugin>
        <version.animal-sniffer-maven-plugin>1.18</version.animal-sniffer-maven-plugin>

        <gibIntegrationTestRepo>${project.build.directory}${file.separator}it${file.separator}repo</gibIntegrationTestRepo>

        <!-- Properties to skip UnitTests (UTs) via surefire-plugin and/or IntegrationTests (UTs) via failsafe-plugin
             See also: https://stackoverflow.com/a/37880379 -->
        <skipTests>false</skipTests>
        <skipITs>${skipTests}</skipITs>
        <skipUTs>${skipTests}</skipUTs>

        <!-- See https://www.jacoco.org/jacoco/trunk/doc/prepare-agent-mojo.html for empty argLine -->
        <argLine />
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>${version.jgit}</version>
            <exclusions>
                <!-- we use a version that matches the one that is provided by maven (and has to be compatible with jgit) -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-core</artifactId>
            <version>${version.maven-core}</version>
            <scope>provided</scope>
            <exclusions>
                <!-- avoid direct usage of Guice annotations -->
                <exclusion>
                    <groupId>com.google.inject</groupId>
                    <artifactId>guice</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${version.javax.inject}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-reflect</artifactId>
            <version>${version.powermock-reflect}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.logback}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit.http.server</artifactId>
            <version>${version.jgit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${version.jetty}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${version.jetty}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <defaultGoal>clean install</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${version.maven-enforcer-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.maven-clean-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-component-metadata</artifactId>
                    <version>${version.plexus-component-metadata}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.maven-resources-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.maven-compiler-plugin}</version>
                    <configuration>
                        <source>${javaSourceLevel}</source>
                        <target>${javaSourceLevel}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.maven-surefire-plugin}</version>
                    <configuration>
                        <skipTests>${skipUTs}</skipTests>
                        <trimStackTrace>false</trimStackTrace> <!-- https://issues.apache.org/jira/browse/SUREFIRE-1457 -->
                        <excludes>
                            <exclude>**/*IntegrationTest.java</exclude>
                            <exclude>**/*$*.java</exclude>
                        </excludes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>${version.maven-surefire-plugin}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${version.maven-source-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.maven-javadoc-plugin}</version>
                    <configuration>
                        <source>${javaSourceLevel}</source>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${version.maven-site-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.maven-jar-plugin}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${version.maven-failsafe-plugin}</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                        <skipITs>${skipITs}</skipITs>
                        <trimStackTrace>false</trimStackTrace> <!-- https://issues.apache.org/jira/browse/SUREFIRE-1457 -->
                        <includes>
                            <include>**/*IntegrationTest.java</include>
                        </includes>
                        <systemPropertyVariables>
                            <gibIntegrationTestRepo>${gibIntegrationTestRepo}</gibIntegrationTestRepo>
                            <gibIntegrationTestVersion>${project.version}</gibIntegrationTestVersion>
                            <logback.FILE.name>test-integration</logback.FILE.name>
                        </systemPropertyVariables>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.maven-install-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${version.maven-antrun-plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant</artifactId>
                            <version>${version.ant}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${version.maven-deploy-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${version.maven-gpg-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${version.nexus-staging-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${version.versions-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${version.maven-release-plugin}</version>
                    <configuration>
                        <tagNameFormat>version/@{project.version}</tagNameFormat>
                        <goals>deploy</goals>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-maven-plugin</artifactId>
                    <version>${version.animal-sniffer-maven-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${version.maven-core},)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-component-metadata</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-metadata</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- avoid to re-download everything into the integration test repo by pre-propulating it from regular local repo -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-it-init-repo</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <mkdir dir="${gibIntegrationTestRepo}" />
                                <condition property="onWindows">
                                    <os family="windows" />
                                </condition>
                                <!-- no easy way to hard-link on Windows, so copy instead of link but only the most important deps -->
                                <copy if:set="onWindows" todir="${gibIntegrationTestRepo}">
                                    <fileset dir="${settings.localRepository}" includes="org/apache/maven/**,org/codehaus/plexus/**,org/eclipse/jgit/**,org/sonatype/**" />
                                </copy>
                                <!-- on non-Windows: assume that rsync is present and just speedily hard-link the entire local repo to the it repo -->
                                <exec unless:set="onWindows" executable="rsync" failifexecutionfails="false">
                                    <arg value="-a" />
                                    <arg value="--link-dest=${settings.localRepository}" />
                                    <arg value="${settings.localRepository}/" />
                                    <arg value="${gibIntegrationTestRepo}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-it-install-gib</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <!-- no "skip" available -->
                            <file>${project.build.directory}/${project.build.finalName}.${project.packaging}</file>
                            <localRepositoryPath>${gibIntegrationTestRepo}</localRepositoryPath>
                            <pomFile>${project.basedir}/pom.xml</pomFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- verify that only JDK8 APIs are used -->
        <profile>
            <id>jdk9+</id>
            <activation>
                <jdk>[1.9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>animal-sniffer-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-java-version-compatibility</id>
                                <phase>test</phase>
                                <goals>
                                   <goal>check</goal>
                                </goals>
                                <configuration>
                                    <signature>
                                        <groupId>org.codehaus.mojo.signature</groupId>
                                        <artifactId>java18</artifactId>
                                        <version>1.0</version>
                                    </signature>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- avoid to clean the integration test repo in target, unless executed with -DcleanAll -->
        <profile>
            <id>dont-clean-it-repo</id>
            <activation>
                <property>
                    <name>!cleanAll</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}</directory>
                                    <excludes>
                                        <exclude>it/repo/**</exclude>
                                    </excludes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>display-updates</id>
            <build>
                <defaultGoal>initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <configuration>
                            <rulesUri>file:///${project.basedir}/maven-version-rules.xml</rulesUri>
                        </configuration>
                        <executions>
                            <execution>
                                <id>display-updates</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>display-dependency-updates</goal>
                                    <goal>display-plugin-updates</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
